Usage of 0-add_integer.py
=========================

Numbers
=======

This module defines an integer addition function ``add_integer(a, b=98)``.


``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(3, 2)
    5


    >>> add_integer(3, -2)
    1


The second argument is optional, it is 98 by default if it is not supplied.


    >>> add_integer(3)
    101



The function also works with floating-point values, but they are typecasted 
to integer before the addition takes place.

    >>> add_integer(3.0, 2.0)
    5


    >>> add_integer(3.8, 0.4)
    3


    >>> add_integer(-3.8, -0.4)
    -3


    >>> add_integer(3.3, -2)
    1


Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If any of the two arguments is a non-integer and non-float, a TypeError is raised:


    >>> add_integer("hello", 2)
    Traceback (most recent call last):
    TypeError: a must be an integer


    >>> add_integer(3, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer


    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer



If the two arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.


    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer


The function will fail if infinity is provided.

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer


Finally if Not a Number, NaN is supplied as arguments.


    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer


    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

